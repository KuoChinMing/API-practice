import{promised}from"q";let baseURL="http://ep.ebmtech.com:9006/api/";const token=localStorage.getItem("token"),authorizationToken=`Bearer ${token}`;function getData(e){const t=baseURL+e;return new Promise((e,o)=>{$.ajax({url:t,dataType:"json",type:"GET",beforeSend(e){e.setRequestHeader("Authorization",authorizationToken)},success:t=>{e(t)},error:e=>{o(e)}})})}function getReportID(e,t){const o=`DocumentIndexesR/${e}?p=${t}&k=FilterAfterAdmission&i=0`;Promise.resolve(getData(o)).then(e=>{showReport(e)}).catch(e=>{$("#report-data").append("<p>Report doesn't exist.</p>"),console.log(e),console.log("request DocumentIndexesR API fail.")})}function showReport(e){const t=[],o=new Map;let n="";for(let a=0;a<e.length;a++){const r=e[a];n=r.RepID,o.set(r.RepID,r.psHash);const s=`ReportDatasR/${n}?p=${"false"}`;console.log(s),t[a]=getData(s)}openHTMLViewer(t,o,n)}function openHTMLViewer(e,t,o){Promise.all(e).then(e=>{$("#report-data").html(e),$("#report-data tr[hidden]").removeAttr("hidden"),$('#report-data input[type="button"]').on("click",e=>{const n=e.target.id.split("btn_ImgTrShow_")[1],a=`${baseURL="http://192.168.66.140/html5/ShowImage.html?"}psHash=${t.get(o)}&accessionNumber=${n}`;window.location=a})}).catch(e=>{$("#report-data").append("<p>Report doesn't exist.</p>"),console.log(e),console.log("request ReportData API fail.")})}$(document).ready(()=>{const e=new URL(window.location.href);getReportID(e.searchParams.get("AID"),e.searchParams.get("tempCode"))});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlcG9ydC5qcyJdLCJuYW1lcyI6WyJwcm9taXNlZCIsImJhc2VVUkwiLCJ0b2tlbiIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJhdXRob3JpemF0aW9uVG9rZW4iLCJnZXREYXRhIiwiYXBpVVJMIiwiY29tcGxldGVkVVJMIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCIkIiwiYWpheCIsInVybCIsImRhdGFUeXBlIiwidHlwZSIsIltvYmplY3QgT2JqZWN0XSIsInJlcXVlc3QiLCJzZXRSZXF1ZXN0SGVhZGVyIiwic3VjY2VzcyIsInJlc3BvbnNlIiwiZXJyb3IiLCJnZXRSZXBvcnRJRCIsIkFJRCIsInRlbXBDb2RlIiwiRG9jdW1lbnRJbmRleGVzQVBJVVJMIiwidGhlbiIsImRvY3VtbmV0SW5kZXhlcyIsInNob3dSZXBvcnQiLCJjYXRjaCIsImFwcGVuZCIsImNvbnNvbGUiLCJsb2ciLCJkb2N1bWVudEluZGV4ZXMiLCJyZXBvcnQiLCJwc0hhc2hlcyIsIk1hcCIsInJlcElEIiwiaSIsImxlbmd0aCIsImRvY3VtZW50SW5kZXgiLCJSZXBJRCIsInNldCIsInBzSGFzaCIsInJlcG9ydERhdGFBUElVUkwiLCJvcGVuSFRNTFZpZXdlciIsImFsbCIsImh0bWwiLCJyZW1vdmVBdHRyIiwib24iLCJlIiwiYWNjZXNzaW9uTnVtYmVyIiwidGFyZ2V0IiwiaWQiLCJzcGxpdCIsImdldCIsIndpbmRvdyIsImxvY2F0aW9uIiwiZG9jdW1lbnQiLCJyZWFkeSIsIlVSTCIsImhyZWYiLCJzZWFyY2hQYXJhbXMiXSwibWFwcGluZ3MiOiJPQUFTQSxhQUFnQixJQUV6QixJQUFJQyxRQUFVLGtDQUNkLE1BQU1DLE1BQVFDLGFBQWFDLFFBQVEsU0FDN0JDLDZCQUErQkgsUUFTckMsU0FBU0ksUUFBUUMsR0FDZixNQUFNQyxFQUFlUCxRQUFVTSxFQUMvQixPQUFPLElBQUlFLFFBQVEsQ0FBQ0MsRUFBU0MsS0FDM0JDLEVBQUVDLEtBQUssQ0FDTEMsSUFBS04sRUFDTE8sU0FBVSxPQUNWQyxLQUFNLE1BQ05DLFdBQVdDLEdBQ1RBLEVBQVFDLGlCQUFpQixnQkFBaUJkLHFCQUU1Q2UsUUFBVUMsSUFDUlgsRUFBUVcsSUFFVkMsTUFBUUEsSUFDTlgsRUFBT1csUUFNZixTQUFTQyxZQUFZQyxFQUFLQyxHQUV4QixNQUFNQyxzQkFBNENGLE9BQVNDLCtCQUMzRGhCLFFBQVFDLFFBQVFKLFFBQVFvQixJQUF3QkMsS0FBTUMsSUFDcERDLFdBQVdELEtBQ1ZFLE1BQU9SLElBQ1JWLEVBQUUsZ0JBQWdCbUIsT0FBTyxnQ0FDekJDLFFBQVFDLElBQUlYLEdBQ1pVLFFBQVFDLElBQUksd0NBSWhCLFNBQVNKLFdBQVdLLEdBQ2xCLE1BQU1DLEVBQVMsR0FDVEMsRUFBVyxJQUFJQyxJQUNyQixJQUFJQyxFQUFRLEdBQ1osSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlMLEVBQWdCTSxPQUFRRCxJQUFLLENBQy9DLE1BQU1FLEVBQWdCUCxFQUFnQkssR0FDdENELEVBQVFHLEVBQWNDLE1BQ3RCTixFQUFTTyxJQUFJRixFQUFjQyxNQUFPRCxFQUFjRyxRQUNoRCxNQUNNQyxrQkFBbUNQLE9BRDNCLFVBRWROLFFBQVFDLElBQUlZLEdBQ1pWLEVBQU9JLEdBQUtqQyxRQUFRdUMsR0FFdEJDLGVBQWVYLEVBQVFDLEVBQVVFLEdBR25DLFNBQVNRLGVBQWVYLEVBQVFDLEVBQVVFLEdBQ3hDN0IsUUFBUXNDLElBQUlaLEdBQVFSLEtBQU1OLElBQ3hCVCxFQUFFLGdCQUFnQm9DLEtBQUszQixHQUN2QlQsRUFBRSwyQkFBMkJxQyxXQUFXLFVBQ3hDckMsRUFBRSxxQ0FBcUNzQyxHQUFHLFFBQVVDLElBQ2xELE1BQU1DLEVBQWtCRCxFQUFFRSxPQUFPQyxHQUFHQyxNQUFNLGtCQUFrQixHQUV0RC9DLEtBRE5QLFFBQVUsdURBQytCbUMsRUFBU29CLElBQUlsQixzQkFBMEJjLElBQ2hGSyxPQUFPQyxTQUFXbEQsTUFFbkJzQixNQUFPUixJQUNSVixFQUFFLGdCQUFnQm1CLE9BQU8sZ0NBQ3pCQyxRQUFRQyxJQUFJWCxHQUNaVSxRQUFRQyxJQUFJLGtDQXBFaEJyQixFQUFFK0MsVUFBVUMsTUFBTSxLQUNoQixNQUFNOUMsRUFBTSxJQUFJK0MsSUFBSUosT0FBT0MsU0FBU0ksTUFHcEN2QyxZQUZZVCxFQUFJaUQsYUFBYVAsSUFBSSxPQUNoQjFDLEVBQUlpRCxhQUFhUCxJQUFJIiwiZmlsZSI6InJlcG9ydC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByb21pc2VkIH0gZnJvbSBcInFcIjtcblxubGV0IGJhc2VVUkwgPSAnaHR0cDovL2VwLmVibXRlY2guY29tOjkwMDYvYXBpLyc7XG5jb25zdCB0b2tlbiA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xuY29uc3QgYXV0aG9yaXphdGlvblRva2VuID0gYEJlYXJlciAke3Rva2VufWA7XG5cbiQoZG9jdW1lbnQpLnJlYWR5KCgpID0+IHtcbiAgY29uc3QgdXJsID0gbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gIGNvbnN0IEFJRCA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KCdBSUQnKTtcbiAgY29uc3QgdGVtcENvZGUgPSB1cmwuc2VhcmNoUGFyYW1zLmdldCgndGVtcENvZGUnKTtcbiAgZ2V0UmVwb3J0SUQoQUlELCB0ZW1wQ29kZSk7XG59KTtcblxuZnVuY3Rpb24gZ2V0RGF0YShhcGlVUkwpIHtcbiAgY29uc3QgY29tcGxldGVkVVJMID0gYmFzZVVSTCArIGFwaVVSTDtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAkLmFqYXgoe1xuICAgICAgdXJsOiBjb21wbGV0ZWRVUkwsXG4gICAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgICAgdHlwZTogJ0dFVCcsXG4gICAgICBiZWZvcmVTZW5kKHJlcXVlc3QpIHtcbiAgICAgICAgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKCdBdXRob3JpemF0aW9uJywgYXV0aG9yaXphdGlvblRva2VuKTtcbiAgICAgIH0sXG4gICAgICBzdWNjZXNzOiAocmVzcG9uc2UpID0+IHtcbiAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICB9LFxuICAgICAgZXJyb3I6IChlcnJvcikgPT4ge1xuICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldFJlcG9ydElEKEFJRCwgdGVtcENvZGUpIHtcbiAgLy8gY29uc3QgRG9jdW1lbnRJbmRleGVzQVBJVVJMID0gYERvY3VtZW50SW5kZXhlc1IvJHtBSUR9P3A9JHt0ZW1wQ29kZX1gO1xuICBjb25zdCBEb2N1bWVudEluZGV4ZXNBUElVUkwgPSBgRG9jdW1lbnRJbmRleGVzUi8ke0FJRH0/cD0ke3RlbXBDb2RlfSZrPUZpbHRlckFmdGVyQWRtaXNzaW9uJmk9MGA7XG4gIFByb21pc2UucmVzb2x2ZShnZXREYXRhKERvY3VtZW50SW5kZXhlc0FQSVVSTCkpLnRoZW4oKGRvY3VtbmV0SW5kZXhlcykgPT4ge1xuICAgIHNob3dSZXBvcnQoZG9jdW1uZXRJbmRleGVzKTtcbiAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgJCgnI3JlcG9ydC1kYXRhJykuYXBwZW5kKCc8cD5SZXBvcnQgZG9lc25cXCd0IGV4aXN0LjwvcD4nKTtcbiAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgY29uc29sZS5sb2coJ3JlcXVlc3QgRG9jdW1lbnRJbmRleGVzUiBBUEkgZmFpbC4nKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNob3dSZXBvcnQoZG9jdW1lbnRJbmRleGVzKSB7XG4gIGNvbnN0IHJlcG9ydCA9IFtdO1xuICBjb25zdCBwc0hhc2hlcyA9IG5ldyBNYXAoKTtcbiAgbGV0IHJlcElEID0gJyc7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZG9jdW1lbnRJbmRleGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgZG9jdW1lbnRJbmRleCA9IGRvY3VtZW50SW5kZXhlc1tpXTtcbiAgICByZXBJRCA9IGRvY3VtZW50SW5kZXguUmVwSUQ7XG4gICAgcHNIYXNoZXMuc2V0KGRvY3VtZW50SW5kZXguUmVwSUQsIGRvY3VtZW50SW5kZXgucHNIYXNoKTsgLy8gcmVjb3JkaW5nIHJlcElEICYgcmVwUHNIYXNoXG4gICAgY29uc3QgSXNUbXAgPSAnZmFsc2UnO1xuICAgIGNvbnN0IHJlcG9ydERhdGFBUElVUkwgPSBgUmVwb3J0RGF0YXNSLyR7cmVwSUR9P3A9JHtJc1RtcH1gO1xuICAgIGNvbnNvbGUubG9nKHJlcG9ydERhdGFBUElVUkwpO1xuICAgIHJlcG9ydFtpXSA9IGdldERhdGEocmVwb3J0RGF0YUFQSVVSTCk7XG4gIH1cbiAgb3BlbkhUTUxWaWV3ZXIocmVwb3J0LCBwc0hhc2hlcywgcmVwSUQpO1xufVxuXG5mdW5jdGlvbiBvcGVuSFRNTFZpZXdlcihyZXBvcnQsIHBzSGFzaGVzLCByZXBJRCkge1xuICBQcm9taXNlLmFsbChyZXBvcnQpLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgJCgnI3JlcG9ydC1kYXRhJykuaHRtbChyZXNwb25zZSk7XG4gICAgJCgnI3JlcG9ydC1kYXRhIHRyW2hpZGRlbl0nKS5yZW1vdmVBdHRyKCdoaWRkZW4nKTtcbiAgICAkKCcjcmVwb3J0LWRhdGEgaW5wdXRbdHlwZT1cImJ1dHRvblwiXScpLm9uKCdjbGljaycsIChlKSA9PiB7XG4gICAgICBjb25zdCBhY2Nlc3Npb25OdW1iZXIgPSBlLnRhcmdldC5pZC5zcGxpdCgnYnRuX0ltZ1RyU2hvd18nKVsxXTtcbiAgICAgIGJhc2VVUkwgPSAnaHR0cDovLzE5Mi4xNjguNjYuMTQwL2h0bWw1L1Nob3dJbWFnZS5odG1sPyc7XG4gICAgICBjb25zdCBjb21wbGV0ZWRVUkwgPSBgJHtiYXNlVVJMfXBzSGFzaD0ke3BzSGFzaGVzLmdldChyZXBJRCl9JmFjY2Vzc2lvbk51bWJlcj0ke2FjY2Vzc2lvbk51bWJlcn1gO1xuICAgICAgd2luZG93LmxvY2F0aW9uID0gY29tcGxldGVkVVJMO1xuICAgIH0pO1xuICB9KS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAkKCcjcmVwb3J0LWRhdGEnKS5hcHBlbmQoJzxwPlJlcG9ydCBkb2VzblxcJ3QgZXhpc3QuPC9wPicpO1xuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICBjb25zb2xlLmxvZygncmVxdWVzdCBSZXBvcnREYXRhIEFQSSBmYWlsLicpO1xuICB9KTtcbn1cbiJdfQ==
